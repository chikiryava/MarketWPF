// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zad5.Data;

#nullable disable

namespace Zad5.Migrations
{
    [DbContext(typeof(WildBerriesContext))]
    [Migration("20240326152229_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zad5.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OrderDeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderPickupPointId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderPickupPointId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("ProductArticleNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductArticleNumber")
                        .HasName("PK__OrderPro__817A2662F17505A8");

                    b.HasIndex("ProductArticleNumber");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.OrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("OrderStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderStatusId");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.PickupPoint", b =>
                {
                    b.Property<int>("PickUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PickUpId"));

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PickUpId");

                    b.ToTable("PickupPoint", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.Product", b =>
                {
                    b.Property<string>("ProductArticleNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCost")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProductDiscountAmount")
                        .HasColumnType("int");

                    b.Property<int>("ProductManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductProviderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuantityInStock")
                        .HasColumnType("int");

                    b.Property<int>("ProductUnit")
                        .HasColumnType("int");

                    b.HasKey("ProductArticleNumber")
                        .HasName("PK__Product__2EA7DCD52E51452C");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductManufacturerId");

                    b.HasIndex("ProductProviderId");

                    b.HasIndex("ProductUnit");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.ProductCategory", b =>
                {
                    b.Property<int>("CategriesId")
                        .HasColumnType("int");

                    b.Property<string>("CategoriesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategriesId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Zad5.Models.ProductManufacture", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturerId");

                    b.ToTable("ProductManufactures");
                });

            modelBuilder.Entity("Zad5.Models.ProductProvider", b =>
                {
                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("ProductProviders");
                });

            modelBuilder.Entity("Zad5.Models.ProductUnit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("Zad5.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3AFABE96DE");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPatronymic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACC2920DDA");

                    b.HasIndex("UserRole");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Zad5.Models.UserOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOrders");
                });

            modelBuilder.Entity("Zad5.Models.Order", b =>
                {
                    b.HasOne("Zad5.Models.PickupPoint", "OrderPickupPoint")
                        .WithMany("Orders")
                        .HasForeignKey("OrderPickupPointId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_PickupPoint");

                    b.HasOne("Zad5.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_OrderStatus");

                    b.HasOne("Zad5.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("OrderPickupPoint");

                    b.Navigation("OrderStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zad5.Models.OrderProduct", b =>
                {
                    b.HasOne("Zad5.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderProduct_Order");

                    b.HasOne("Zad5.Models.Product", "ProductArticleNumberNavigation")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductArticleNumber")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Produ__2E1BDC42");

                    b.Navigation("Order");

                    b.Navigation("ProductArticleNumberNavigation");
                });

            modelBuilder.Entity("Zad5.Models.Product", b =>
                {
                    b.HasOne("Zad5.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProductCategories");

                    b.HasOne("Zad5.Models.ProductManufacture", "ProductManufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ProductManufacturerId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProductManufactures");

                    b.HasOne("Zad5.Models.ProductProvider", "ProductProvider")
                        .WithMany("Products")
                        .HasForeignKey("ProductProviderId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProductProviders");

                    b.HasOne("Zad5.Models.ProductUnit", "ProductUnitNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ProductUnit")
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProductUnits");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductManufacturer");

                    b.Navigation("ProductProvider");

                    b.Navigation("ProductUnitNavigation");
                });

            modelBuilder.Entity("Zad5.Models.User", b =>
                {
                    b.HasOne("Zad5.Models.Role", "UserRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("UserRole")
                        .IsRequired()
                        .HasConstraintName("FK__User__UserRole__3F466844");

                    b.Navigation("UserRoleNavigation");
                });

            modelBuilder.Entity("Zad5.Models.UserOrder", b =>
                {
                    b.HasOne("Zad5.Models.User", "User")
                        .WithMany("UserOrders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserOrders_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Zad5.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Zad5.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Zad5.Models.PickupPoint", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Zad5.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Zad5.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Zad5.Models.ProductManufacture", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Zad5.Models.ProductProvider", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Zad5.Models.ProductUnit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Zad5.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Zad5.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("UserOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
